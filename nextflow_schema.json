{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://github.com/cidgoh/AIV_seeker/dev_nf-aivseeker/nextflow_schema.json",
    "title": "cidgoh/aiv_seeker pipeline parameters",
    "description": "AIV_seeker: An scalable and reproducible pipeline for processing and analysing avian influenza virus from metagenomic data",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "fa_icon": "fas fa-file-csv",
                    "help_text": "You will need to create a samplesheet with information about the samples you would like to analyse before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/viralrecon/docs/usage#introduction).",
                    "description": "Path to comma-separated file containing information about the samples you would like to analyse."
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                }
            }
        },

       "illumina_qc_read_trimming_and_filtering_options": {
            "title": "Illumina QC, read trimming and filtering options",
            "type": "object",
            "description": "Options to adjust QC, read trimming and host read filtering with Kraken2 for the Illumina workflow.",
            "default": "",
            "properties": {
                "kraken2_db": {
                    "type": "string",
                    "format": "path",
                    "default": "s3://nf-core-awsmegatests/viralrecon/input_data/kraken2_human.tar.gz",
                    "fa_icon": "fab fa-gitkraken",
                    "description": "Full path to Kraken2 database built from host genome."
                },
                "kraken2_db_name": {
                    "type": "string",
                    "default": "human",
                    "fa_icon": "fab fa-gitkraken",
                    "description": "Name for host genome as recognised by Kraken2 when using the 'kraken2 build' command."
                },
               "save_trimmed_fail": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save the trimmed FastQ files in the results directory.",
                    "help_text": "By default, trimmed FastQ files will not be saved to the results directory. Specify this flag (or set to true in your config file) to copy these files to the results directory when complete."
                },
                "skip_fastqc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip FastQC."
                },
                "skip_kraken2": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip Kraken2 process for removing host classified reads."
                },
                "skip_fastp": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip the initial read trimming step peformed by fastp."
                },
                "skip_cutadapt": {
                    "type": "boolean",
                    "description": "Skip the amplicon trimming step with Cutadapt when using --protocol amplicon.",
                    "fa_icon": "fas fa-fast-forward"
                }
            },
            "fa_icon": "fas fa-cut"
        },

        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "hidden": true,
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ]
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true,
                    "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true,
                    "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true,
                    "help_text": "Set to disable colourful command line output and live life in monochrome."
                },
                "tracedir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "enable_conda": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Run this workflow with Conda. You can also use '-profile conda' instead of providing this parameter.",
                    "fa_icon": "fas fa-bacon"
                },
                "singularity_pull_docker_container": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead.",
                    "fa_icon": "fas fa-toolbox",
                    "help_text": "This may be useful for example if you are unable to directly pull Singularity containers to run the pipeline due to http/https proxy issues."
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        },


    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        }
      
    ]
}